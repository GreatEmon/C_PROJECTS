#include <stdio.h>
#include <string.h>
#include <stdlib.h>


typedef struct ISRT
{
    int year;
    char name[100];
    int reg;
    int roll;
    struct marks
    {
        int course;
        float marks;
    } sub[10];
    float total;
    float cgpa;
} student;

float cgpa(float tot)
{
    float cg;
    if (tot >= 800)
    {
        cg = 4.00;
    }
    else if (tot >= 750 && tot < 800)
    {
        cg = 3.75;
    }
    else if (tot >= 700 && tot < 750)
    {
        cg = 3.50;
    }
    else if (tot >= 650 && tot < 700)
    {
        cg = 3.25;
    }
    else if (tot >= 600 && tot < 650)
    {
        cg = 3.00;
    }
    else if (tot >= 550 && tot < 600)
    {
        cg = 2.75;
    }
    else if (tot >= 500 && tot < 550)
    {
        cg = 2.50;
    }
    else if (tot >= 450 && tot < 500)
    {
        cg = 2.25;
    }
    else if (tot >= 400 && tot < 450)
    {
        cg = 2.00;
    }
    else if (tot >= 350 && tot < 400)
    {
        cg = 1.75;
    }
    else if (tot >= 300 && tot < 350)
    {
        cg = 1.50;
    }
    else if (tot >= 250 && tot < 300)
    {
        cg = 1.25;
    }
    else if (tot >= 200 && tot < 250)
    {
        cg = 1.00;
    }
    else if (tot < 200)
    {
        cg = 0.00;
    }
    return cg;
}

void add()
{
    student *info;
    int i, j, n;
    float tot = 0;
    FILE *fptr;
    printf("\n\n******ADD YOUR RECORD******\n");
    printf("\nEnter how many student you want to enter : ");
    scanf("%d", &n);
    info = (student *)calloc(n, sizeof(student));

    for (j = 0; j < n; j++)
    {
        printf("\nIn which year you study ?[1/2//3/4/5]: ");
        scanf("%d", &info[j].year);
        fflush(stdin);
        printf("\nEnter your full name:");
        gets(info[j].name);
        printf("\nEnter your Registration Number: ");
        scanf("%d", &info[j].reg);
        printf("\nEnter your Roll Number: ");
        scanf("%d", &info[j].roll);
        for (i = 0; i < 10; i++)
        {
            printf("Enter your Course Number: ");
            scanf("%d", &info[j].sub[i].course);
            printf("Enter your Marks for Course No (%d): ", info[j].sub[i].course);
            scanf("%f", &info[j].sub[i].marks);
            tot += info[j].sub[i].marks;
        }
        info[j].total = tot;
        info[j].cgpa = cgpa(tot);
        fptr = fopen("isrt.txt", "w");
        fwrite(&info[j], sizeof(student), 1, fptr);
        if (fptr != NULL)
        {
            printf("\nInsert successfully");
            free(info);
        }
    }
    fclose(fptr);
}
void view()
{
    FILE *fptr;
    student data;
    int k, j = 0;
    printf("\n\n****************Students data****************");
    fptr = fopen("isrt.txt", "r");
    while (fread(&data, sizeof(student), 1, fptr))
    {
        printf("\n\n****Data for reg %d", data.reg);
        printf("\nStudent of %d year", data.year);
        fflush(stdin);
        printf("\nStudent name   : ");
        puts(data.name);
        printf("Student Roll   : %d", data.roll);
        printf("\nStudent Reg    : %d", data.reg);
        printf("\n\nYour Marks for the exam:");
        for (k = 0; k < 10; k++)
        {
            printf("\nAST-%d marks : %0.2f", data.sub[k].course, data.sub[k].marks);
        }
        printf("\n------------------------");
        printf("\nTotal marks   : %0.2f", data.total);
        printf("\033[1;33m");
        printf("\n\n***************************\n****                *******\n****  CGPA : %0.2f   *******\n****                *******\n***************************\n\n", data.cgpa);
        printf("\033[0;00m");
    }
    fclose(fptr);
}
void search(int rolls)
{
    FILE *fptr;
    student data;
    int k, j = 0, found = 0;
    printf("\n\n************* Students data **************");
    fptr = fopen("isrt.txt", "r");
    while (fread(&data, sizeof(student), 1, fptr))
    {
        if (rolls == data.roll)
        {
            found = 1;
            printf("\n\n****Data for reg %d", data.reg);
            printf("\nStudent of %d year", data.year);
            fflush(stdin);
            printf("\nStudent name   : ");
            puts(data.name);
            printf("Student Roll   : %d", data.roll);
            printf("\nStudent Reg    : %d", data.reg);
            printf("\n\nYour Marks for the exam:");
            for (k = 0; k < 10; k++)
            {
                printf("\nAST-%d marks : %0.2f", data.sub[k].course, data.sub[k].marks);
            }
            printf("\n------------------------");
            printf("\nTotal marks   : %0.2f", data.total);
            printf("\033[1;32m");
            printf("\n\n***************************\n****                *******\n****  CGPA : %0.2f   *******\n****                *******\n***************************\n\n", data.cgpa);
            printf("\033[0;0m");
        }
    }
    if (found == 0)
    {
        printf("\n\nNo data found for roll-%d", rolls);
    }
    fclose(fptr);
}

void totaldata()
{
    FILE *fptr;
    int n = 0;
    fptr = fopen("isrt.txt", "r");
    fseek(fptr, 0, SEEK_END);
    n = ftell(fptr) / sizeof(student);
    printf("\033[1;31m");
    printf("\n\nTotal number of record is %d\n\n", n);
    printf("\033[0;0m");
    fclose(fptr);
}

void update(int roll)
{
    FILE *fptr, *fptr1;
    student data;
    int i, found = 0;
    float tot = 0;
    fptr = fopen("isrt.txt", "r");
    fptr1 = fopen("temp.txt", "w");
    while (fread(&data, sizeof(student), 1, fptr))
    {
        if (data.roll == roll)
        {
            found = 1;
            printf("\nIn which year you study ?[1/2//3/4/5]: ");
            scanf("%d", &data.year);
            fflush(stdin);
            printf("\nEnter your Ner full name:");
            gets(data.name);
            printf("\nEnter your New Registration Number: ");
            scanf("%d", &data.reg);
            printf("\nEnter your New Roll Number: ");
            scanf("%d", &data.roll);
            for (i = 0; i < 10; i++)
            {
                printf("Enter your Course Number: ");
                scanf("%d", &data.sub[i].course);
                printf("Enter your New Marks for Course No (%d): ", data.sub[i].course);
                scanf("%f", &data.sub[i].marks);
                tot += data.sub[i].marks;
            }
            data.total = tot;
            data.cgpa = cgpa(tot);
        }
        fwrite(&data, sizeof(student), 1, fptr1);
    }

    fclose(fptr);
    fclose(fptr1);

    if (found == 0)
    {
        printf("\n\nNo data found for roll %d", roll);
    }
    else
    {
        fptr = fopen("isrt.txt", "w");
        fptr1 = fopen("temp.txt", "r");

        while (fread(&data, sizeof(student), 1, fptr1))
        {
            fwrite(&data, sizeof(student), 1, fptr);
        }
        printf("\n\nData Updated successfully");
    }
    fclose(fptr);
    fclose(fptr1);
}

void delete (int roll)
{
    FILE *fptr, *fptr1;
    student data;
    int i, found = 0;
    float tot = 0;
    fptr = fopen("isrt.txt", "r");
    fptr1 = fopen("temp.txt", "w");
    while (fread(&data, sizeof(student), 1, fptr))
    {
        if (data.roll == roll)
        {
            found = 1;
        }
        else
        {
            fwrite(&data, sizeof(student), 1, fptr1);
        }
    }

    fclose(fptr);
    fclose(fptr1);

    if (found == 0)
    {
        printf("\n\nNo data found for roll %d", roll);
    }
    else
    {
        fptr = fopen("isrt.txt", "w");
        fptr1 = fopen("temp.txt", "r");

        while (fread(&data, sizeof(student), 1, fptr1))
        {
            fwrite(&data, sizeof(student), 1, fptr);
        }
        printf("\n\nData Deleted successfully");
    }
    fclose(fptr);
    fclose(fptr1);
}

void copy(int roll)
{
    FILE *fptr, *fptr1;
    student data;
    int found = 0;

    fptr = fopen("isrt.txt", "r");
    fptr1 = fopen("copy.txt", "w");
    while (fread(&data, sizeof(student), 1, fptr))
    {
        if (data.roll == roll)
        {
            found = 1;
            fwrite(&data, sizeof(student), 1, fptr1);
            printf("\n\nData copied successfully .Please check copy.txt");
        }
    }

    fclose(fptr);
    fclose(fptr1);

    if (found == 0)
    {
        printf("\n\nNo data found for roll %d", roll);
    }
}

int main()
{
    int opt, rolls, num = 0;
    do
    {
        printf("\n\n********Welcome to our system************\n");
        printf("\n1. Add record ");
        printf("\n2. View details");
        printf("\n3. Search");
        printf("\n4. Total Number of record");
        printf("\n5. Update");
        printf("\n6. Delete");
        printf("\n7. Copy ");
        printf("\n0. Exit");
        printf("\nPlease select your preferred operation : ");
        scanf("%d", &opt);
        switch (opt)
        {
        case 1:
            add();
            break;
        case 2:
            view();
            break;
        case 3:
            printf("\n\nEnter roll to search: ");
            scanf("%d", &rolls);
            search(rolls);
            break;
        case 4:
            totaldata();
            break;
        case 5:
            rolls = 0;
            printf("\n\nEnter roll to upadte: ");
            scanf("%d", &rolls);
            update(rolls);
            break;
        case 6:
            rolls = 0;
            printf("\n\nEnter roll to delete: ");
            scanf("%d", &rolls);
            delete (rolls);
            break;
        case 7:
            rolls = 0;
            printf("\n\nEnter roll to copy: ");
            scanf("%d", &rolls);
            copy(rolls);
            break;

        default:
            break;
        }
    } while (opt != 0);
}
